{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import type {\n  SetContactOptions\n} from './interfaces/base';\nimport type { PluginListenerHandle } from '@capacitor/core';\n\nimport type { PushMessageEvent, TokenResult } from './interfaces/push';\nimport type { ITokenInitializationStatus, PushMessageDTO, UserInformationDTO } from './interfaces/pushAndroid';\n\nexport interface EmarsysSDKCustomPlugin {\n  \n  echo(options: { value: string }): Promise<{ value: string }>;\n  \n  addListener(\n    eventName: 'pushMessageEvent',\n    listenerFunc: (event: PushMessageEvent) => void\n  ): Promise<PluginListenerHandle> & PluginListenerHandle;\n\n  getUUID(value: string): Promise<{ value: string }>;\n\n  \n  requestPermissions(): Promise<PermissionStatus>;\n\n  checkPermissions(): Promise<PermissionStatus>;\n\n  setContact(options: SetContactOptions): Promise<void>;\n\n  getPushToken(): Promise<TokenResult>;\n\n  register(): Promise<TokenResult>;\n\n  checkPermissions(): Promise<PermissionStatus>;\n\n  clearContact(options: SetContactOptions): Promise<void>;\n\n\n  //----for android\n  setPushTokenFirebase(data: {\n    value: string;\n  }): Promise<ITokenInitializationStatus>;\n\n  \n  setPushMessage(data: PushMessageDTO): Promise<{ value: PushMessageDTO }>;\n  getUserInfo(data: UserInformationDTO): Promise<{ value: unknown }>;\n\n  setUser(data: {\n    value: string;\n  }): Promise<void>;\n\n  clearUser():Promise<void>;\n// ---------------------------\n\n}\n"]}